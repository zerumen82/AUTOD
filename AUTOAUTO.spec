# -*- mode: python ; coding: utf-8 -*-

block_cipher = None

a = Analysis(
    ['run.py'],
    pathex=['D:/PROJECTS/AUTOAUTO'],
    binaries=[],
    datas=[
        ('D:/PROJECTS/AUTOAUTO/.venv', '.venv'),
        ('D:/PROJECTS/AUTOAUTO/checkpoints', 'checkpoints'),
        ('D:/PROJECTS/AUTOAUTO/clip', 'clip'),
        ('D:/PROJECTS/AUTOAUTO/DEP', 'DEP'),
        ('D:/PROJECTS/AUTOAUTO/extensionsbuiltin', 'extensionsbuiltin'),
        ('D:/PROJECTS/AUTOAUTO/flagged', 'flagged'),
        ('D:/PROJECTS/AUTOAUTO/models', 'models'),
        ('D:/PROJECTS/AUTOAUTO/out-voice', 'out-voice'),
        ('D:/PROJECTS/AUTOAUTO/output', 'output'),
        ('D:/PROJECTS/AUTOAUTO/roop', 'roop'),
        ('D:/PROJECTS/AUTOAUTO/src', 'src'),
        ('D:/PROJECTS/AUTOAUTO/ui', 'ui'),
        ('D:/PROJECTS/AUTOAUTO/dll/libpq.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/Qt53DAnimation.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/Qt53DCore.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/Qt53DExtras.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/Qt53DInput.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/Qt53DLogic.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/Qt53DQuickScene2D.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/Qt53DRender.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/Qt5MultimediaQuick.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/Qt5WebEngine.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/nvinfer.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/nvinfer_plugin.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/nvonnxparser.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/tbb12.dll', 'dll'),
        ('C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1/bin/cublas64_12.dll', 'dll'),
        ('C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1/bin/cublasLt64_12.dll', 'dll'),
        ('C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.1', 'dll'),
        ('C:/Program Files/NVIDIA GPU Computing Toolkit/CUDNN', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/.venv/Lib/site-packages/tensorflow', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avcodec-58.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avcodec-59.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avcodec-60.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avdevice-58.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avdevice-59.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avdevice-60.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avfilter-7.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avfilter-8.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avfilter-9.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avformat-58.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avformat-59.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avformat-60.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avutil-56.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avutil-57.dll', 'dll'),
        ('D:/PROJECTS/AUTOAUTO/dll/avutil-58.dll', 'dll')
    ],
    hiddenimports=[],
    hookspath=[],
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=block_cipher,
    noarchive=False
)
pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)
exe = EXE(
    pyz,
    a.scripts,
    [],
    exclude_binaries=True,
    name='AUTODEEP',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False
)
coll = COLLECT(
    exe,
    a.binaries,
    a.zipfiles,
    a.datas,
    strip=False,
    upx=True,
    upx_exclude=[],
    name='AUTODEEP'
)